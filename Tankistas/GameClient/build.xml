<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->
<project name="GameClient" default="default" basedir=".">
    <description>Builds, tests, and runs the project GameClient.</description>
    <import file="nbproject/build-impl.xml"/>
    
    
    <property name="src.dir" value="src"/>
    <property name="build.dir" value="build"/>
    <property name="dist.dir" value="dist"/>
    <property name="lib.dir" value="lib"/>
    <property name="test.dir" value="test"/>
    <property name="build.classes.dir" value="${build.dir}/classes"/>
    <property name="build.test.classes.dir" value="${build.dir}/test-classes"/>
    <property name="dist.jar" value="${dist.dir}/GameClient.jar"/>

    <!-- Initialize directories -->
    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${build.test.classes.dir}"/>
        <mkdir dir="${dist.dir}"/>
    </target>

    <!-- Compile the source code -->
    <target name="compile" depends="init">
        <javac srcdir="${src.dir}" destdir="${build.classes.dir}" includeantruntime="false">
            <classpath>
                <fileset dir="${lib.dir}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javac>
    </target>

    <!-- Compile the test code -->
    <target name="compile-test" depends="compile">
        <javac srcdir="${test.dir}" destdir="${build.test.classes.dir}" includeantruntime="false">
            <classpath>
                <path>
                    <fileset dir="${lib.dir}">
                        <include name="**/*.jar"/>
                    </fileset>
                    <pathelement path="${build.classes.dir}"/>
                </path>
            </classpath>
        </javac>
    </target>

    <!-- Run the tests -->
    <target name="test" depends="compile-test">
        <junit>
            <classpath>
                <path>
                    <fileset dir="${lib.dir}">
                        <include name="**/*.jar"/>
                    </fileset>
                    <pathelement path="${build.classes.dir}"/>
                    <pathelement path="${build.test.classes.dir}"/>
                </path>
            </classpath>
            <batchtest>
                <fileset dir="${test.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
            <formatter type="plain"/>
            <formatter type="xml"/>
        </junit>
    </target>

    <!-- Create the JAR file -->
    <target name="jar" depends="compile">
        <mkdir dir="${dist.dir}"/>
        <jar destfile="${dist.jar}" basedir="${build.classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="client.Main"/>
            </manifest>
        </jar>
    </target>

    <!-- Default target -->
    <target name="all" depends="compile, jar, test"/>


</project>
